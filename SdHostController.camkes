/* Copyright (C) 2020, HENSOLDT Cyber GmbH */

/**
 * @file
 * @brief   Driver for the Secure Digital Host Controller
 *
 * to be used as:
 *
 *      #include "SdHostController/SdHostController.camkes"
 *
 *      SdHostController_COMPONENT_DEFINE(SdHostController)
 *      SdHostController_HW_COMPONENT_DEFINE(SdHostController_HW)
 *
 */

#pragma once

/** @cond SKIP_IMPORTS */
import <std_connector.camkes>;
import <if_OS_Storage.camkes>;
/** @endcond */

#include "plat_defaults.h"

//------------------------------------------------------------------------------
// Component

/**
 * @brief   Declares the SDHC HW component.
 *
 * @param   _name_ - [in] Component's type name.
 */
#define SdHostController_HW_COMPONENT_DEFINE( \
    _name_) \
    \
    component _name_ { \
        hardware; \
        \
        dataport  Buf   regBase; \
        dataport  Buf   mailbox; \
        dataport  Buf   gpio; \
        emits     IRQ   irq; \
    }


/**
 * @brief   Declares the SDHC driver component.
 *
 * @param   _name_ - [in] Component's type name.
 */
#define SdHostController_COMPONENT_DEFINE( \
    _name_) \
    \
    component _name_ { \
        dataport  Buf               regBase; \
        dataport  Buf               mailbox; \
        dataport  Buf               gpio; \
        consumes  IRQ               irq; \
        has       mutex             clientMux; \
        \
        provides  if_OS_Storage     storage_rpc; \
        dataport  Buf               storage_port; \
        \
        attribute int               peripheral_idx; \
    }


//------------------------------------------------------------------------------
// Instance Connection

/**
 * @brief   Connects a SDHC driver instance to a HW instance.
 *
 * @param   _inst_drv_  - [in] Component's instance name.
 * @param   _inst_hw_   - [in] Hardware component's instance name.
 */
#define SdHostController_INSTANCE_CONNECT( \
    _inst_drv_, \
    _inst_hw_) \
    \
    connection  seL4HardwareMMIO \
        _inst_drv_ ## _inst_hw_ ## _mmio( \
            from    _inst_drv_.regBase, \
            to      _inst_hw_.regBase \
        ); \
    \
    connection  seL4HardwareMMIO \
        _inst_drv_ ## _mailbox_ ## _mmio( \
            from    _inst_drv_.mailbox, \
            to      _inst_hw_.mailbox \
        ); \
    \
    connection  seL4HardwareMMIO \
        _inst_drv_ ## _gpio_ ## _mmio( \
            from    _inst_drv_.gpio, \
            to      _inst_hw_.gpio\
        ); \
    \
    connection  seL4HardwareInterrupt \
        _inst_drv_ ## _inst_hw_ ## _irq( \
            from    _inst_hw_.irq, \
            to      _inst_drv_.irq \
        );


/**
 * @brief   Connect a SDHC driver instance to a client.
 *
 * @param   _inst_      - [in] Component's instance name.
 * @param   _rpc_       - [in] Client RPC endpoint
 * @param   _port_      - [in] Client dataport
 */
#define SdHostController_INSTANCE_CONNECT_CLIENT( \
    _inst_, \
    _rpc_, \
    _port_) \
    \
    connection  seL4RPCCall \
        _inst_ ## _rpc( \
            from    _rpc_, \
            to      _inst_.storage_rpc \
        ); \
    \
    connection  seL4SharedData \
        _inst_ ## _port( \
            from    _port_, \
            to      _inst_.storage_port \
        );

//------------------------------------------------------------------------------
// Instance Configuration

/**
 * @brief   Configures the SDHC driver component to a platform specific default
 *          peripheral port.
 *
 * @param   _inst_      - [in] Component's instance.
 */
#define SdHostController_INSTANCE_CONFIGURE(_inst_) \
    SdHostController_INSTANCE_CONFIGURE_BY_DEFAULT(_inst_)

/**
 * @brief   Configures the SDHC HW component to a platform specific default
 *          peripheral port.
 *
 * @param   _inst_      - [in] Component's instance.
 */
#define SdHostController_HW_INSTANCE_CONFIGURE(_inst_) \
    SdHostController_HW_INSTANCE_CONFIGURE_BY_DEFAULT(_inst_)


/**
 * @brief   Configures the SDHC driver component to the passed index value of
 *          the peripheral.
 *
 * @param   _inst_      - [in] Component's instance.
 * @param   _idx_       - [in] Index of the peripheral (sd card slot) to be
 *                             used.
 */
#define SdHostController_INSTANCE_CONFIGURE_BY_INDEX( \
    _inst_, \
    _idx_) \
    \
    _inst_.peripheral_idx    = _idx_;


/**
 * @brief   Configures the SDHC HW component to the passed index value of
 *          the peripheral.
 *
 * @param   _inst_      - [in] Component's instance.
 * @param   _idx_       - [in] Index of the peripheral (sd card slot) to be
 *                             used.
 */
#define SdHostController_HW_INSTANCE_CONFIGURE_BY_INDEX( \
    _inst_, \
    _idx_) \
    \
    _inst_.regBase_paddr  = SDHC ## _idx_ ## _PADDR; \
    _inst_.regBase_size   = SDHC ## _idx_ ## _SIZE; \
    _inst_.mailbox_paddr  = MAILBOX_PADDR; \
    _inst_.mailbox_size   = MAILBOX_SIZE; \
    _inst_.gpio_paddr     = GPIO_PADDR; \
    _inst_.gpio_size      = GPIO_SIZE; \
    _inst_.irq_irq_number = SDHC ## _idx_ ## _IRQ;

#define CONFIGURE_INSTANCE_SD_DRV( \
            _inst_drv_, \
            _dma_size_) \
    \
    _inst_drv_.dma_pool  = _dma_size_;